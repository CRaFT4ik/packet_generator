/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 + Copyright (c) 2019, Eldar Timraleev (aka CRaFT4ik).
 +
 + Licensed under the Apache License, Version 2.0 (the "License");
 + you may not use this file except in compliance with the License.
 + You may obtain a copy of the License at
 +
 +     http://www.apache.org/licenses/LICENSE-2.0
 +
 + Unless required by applicable law or agreed to in writing, software
 + distributed under the License is distributed on an "AS IS" BASIS,
 + WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 + See the License for the specific language governing permissions and
 + limitations under the License.
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'org.beryx.jlink' version '2.12.0'
}

repositories {
    mavenCentral()
}

def currentOS = org.gradle.internal.os.OperatingSystem.current()
def platform
if (currentOS.isWindows()) {
    platform = 'win'
} else if (currentOS.isLinux()) {
    platform = 'linux'
} else if (currentOS.isMacOsX()) {
    platform = 'mac'
}

def multiplatform = true

dependencies {
    compile 'org.pcap4j:pcap4j-core:1.+'
    compile 'org.pcap4j:pcap4j-packetfactory-static:1.+'

    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'org.slf4j:slf4j-simple:1.6.4'

    if (!multiplatform) {
        compile "org.openjfx:javafx-base:$javafx.version:${platform}"
        compile "org.openjfx:javafx-graphics:$javafx.version:${platform}"
        compile "org.openjfx:javafx-controls:$javafx.version:${platform}"
    } else
    {
        runtimeOnly "org.openjfx:javafx-base:$javafx.version:win"
        runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:win"
        runtimeOnly "org.openjfx:javafx-controls:$javafx.version:win"

        runtimeOnly "org.openjfx:javafx-base:$javafx.version:linux"
        runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:linux"
        runtimeOnly "org.openjfx:javafx-controls:$javafx.version:linux"

        runtimeOnly "org.openjfx:javafx-base:$javafx.version:mac"
        runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:mac"
        runtimeOnly "org.openjfx:javafx-controls:$javafx.version:mac"
    }
}

javafx {
    version = "13"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = '${moduleName}'
    }
}

mainClassName = 'ru.er_log/ru.er_log.Main'

jar {
    manifest {
        attributes 'Main-Class': 'ru.er_log.Main'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task jarFat(type: Jar) {
    manifest {
        attributes 'Main-Class': 'ru.er_log.Main'
    }

    baseName = project.name + '-fat'
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }

    with jar
}